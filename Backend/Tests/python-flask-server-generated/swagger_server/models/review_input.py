# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class ReviewInput(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, product_id: int=None, title: str=None, content: str=None, rating: int=None):  # noqa: E501
        """ReviewInput - a model defined in Swagger

        :param product_id: The product_id of this ReviewInput.  # noqa: E501
        :type product_id: int
        :param title: The title of this ReviewInput.  # noqa: E501
        :type title: str
        :param content: The content of this ReviewInput.  # noqa: E501
        :type content: str
        :param rating: The rating of this ReviewInput.  # noqa: E501
        :type rating: int
        """
        self.swagger_types = {
            'product_id': int,
            'title': str,
            'content': str,
            'rating': int
        }

        self.attribute_map = {
            'product_id': 'productId',
            'title': 'title',
            'content': 'content',
            'rating': 'rating'
        }
        self._product_id = product_id
        self._title = title
        self._content = content
        self._rating = rating

    @classmethod
    def from_dict(cls, dikt) -> 'ReviewInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ReviewInput of this ReviewInput.  # noqa: E501
        :rtype: ReviewInput
        """
        return util.deserialize_model(dikt, cls)

    @property
    def product_id(self) -> int:
        """Gets the product_id of this ReviewInput.

        Unique identifier for the reviewed product.  # noqa: E501

        :return: The product_id of this ReviewInput.
        :rtype: int
        """
        return self._product_id

    @product_id.setter
    def product_id(self, product_id: int):
        """Sets the product_id of this ReviewInput.

        Unique identifier for the reviewed product.  # noqa: E501

        :param product_id: The product_id of this ReviewInput.
        :type product_id: int
        """

        self._product_id = product_id

    @property
    def title(self) -> str:
        """Gets the title of this ReviewInput.

        Title or header of the review.  # noqa: E501

        :return: The title of this ReviewInput.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title: str):
        """Sets the title of this ReviewInput.

        Title or header of the review.  # noqa: E501

        :param title: The title of this ReviewInput.
        :type title: str
        """

        self._title = title

    @property
    def content(self) -> str:
        """Gets the content of this ReviewInput.

        Detailed content of the review.  # noqa: E501

        :return: The content of this ReviewInput.
        :rtype: str
        """
        return self._content

    @content.setter
    def content(self, content: str):
        """Sets the content of this ReviewInput.

        Detailed content of the review.  # noqa: E501

        :param content: The content of this ReviewInput.
        :type content: str
        """

        self._content = content

    @property
    def rating(self) -> int:
        """Gets the rating of this ReviewInput.

        Rating given to the product, usually from 1 to 5.  # noqa: E501

        :return: The rating of this ReviewInput.
        :rtype: int
        """
        return self._rating

    @rating.setter
    def rating(self, rating: int):
        """Sets the rating of this ReviewInput.

        Rating given to the product, usually from 1 to 5.  # noqa: E501

        :param rating: The rating of this ReviewInput.
        :type rating: int
        """

        self._rating = rating
