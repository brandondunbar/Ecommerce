# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class ProductReference(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, product_id: int=None, product_name: str=None):  # noqa: E501
        """ProductReference - a model defined in Swagger

        :param product_id: The product_id of this ProductReference.  # noqa: E501
        :type product_id: int
        :param product_name: The product_name of this ProductReference.  # noqa: E501
        :type product_name: str
        """
        self.swagger_types = {
            'product_id': int,
            'product_name': str
        }

        self.attribute_map = {
            'product_id': 'productId',
            'product_name': 'productName'
        }
        self._product_id = product_id
        self._product_name = product_name

    @classmethod
    def from_dict(cls, dikt) -> 'ProductReference':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ProductReference of this ProductReference.  # noqa: E501
        :rtype: ProductReference
        """
        return util.deserialize_model(dikt, cls)

    @property
    def product_id(self) -> int:
        """Gets the product_id of this ProductReference.

        Unique identifier for the product.  # noqa: E501

        :return: The product_id of this ProductReference.
        :rtype: int
        """
        return self._product_id

    @product_id.setter
    def product_id(self, product_id: int):
        """Sets the product_id of this ProductReference.

        Unique identifier for the product.  # noqa: E501

        :param product_id: The product_id of this ProductReference.
        :type product_id: int
        """

        self._product_id = product_id

    @property
    def product_name(self) -> str:
        """Gets the product_name of this ProductReference.

        Name of the product.  # noqa: E501

        :return: The product_name of this ProductReference.
        :rtype: str
        """
        return self._product_name

    @product_name.setter
    def product_name(self, product_name: str):
        """Sets the product_name of this ProductReference.

        Name of the product.  # noqa: E501

        :param product_name: The product_name of this ProductReference.
        :type product_name: str
        """

        self._product_name = product_name
