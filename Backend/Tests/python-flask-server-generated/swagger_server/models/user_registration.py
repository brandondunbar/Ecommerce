# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class UserRegistration(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, username: str=None, email: str=None, password: str=None):  # noqa: E501
        """UserRegistration - a model defined in Swagger

        :param username: The username of this UserRegistration.  # noqa: E501
        :type username: str
        :param email: The email of this UserRegistration.  # noqa: E501
        :type email: str
        :param password: The password of this UserRegistration.  # noqa: E501
        :type password: str
        """
        self.swagger_types = {
            'username': str,
            'email': str,
            'password': str
        }

        self.attribute_map = {
            'username': 'username',
            'email': 'email',
            'password': 'password'
        }
        self._username = username
        self._email = email
        self._password = password

    @classmethod
    def from_dict(cls, dikt) -> 'UserRegistration':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The UserRegistration of this UserRegistration.  # noqa: E501
        :rtype: UserRegistration
        """
        return util.deserialize_model(dikt, cls)

    @property
    def username(self) -> str:
        """Gets the username of this UserRegistration.


        :return: The username of this UserRegistration.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username: str):
        """Sets the username of this UserRegistration.


        :param username: The username of this UserRegistration.
        :type username: str
        """

        self._username = username

    @property
    def email(self) -> str:
        """Gets the email of this UserRegistration.


        :return: The email of this UserRegistration.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email: str):
        """Sets the email of this UserRegistration.


        :param email: The email of this UserRegistration.
        :type email: str
        """

        self._email = email

    @property
    def password(self) -> str:
        """Gets the password of this UserRegistration.


        :return: The password of this UserRegistration.
        :rtype: str
        """
        return self._password

    @password.setter
    def password(self, password: str):
        """Sets the password of this UserRegistration.


        :param password: The password of this UserRegistration.
        :type password: str
        """

        self._password = password
