# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Notification(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: int=None, title: str=None, message: str=None, _date: datetime=None, status: str=None):  # noqa: E501
        """Notification - a model defined in Swagger

        :param id: The id of this Notification.  # noqa: E501
        :type id: int
        :param title: The title of this Notification.  # noqa: E501
        :type title: str
        :param message: The message of this Notification.  # noqa: E501
        :type message: str
        :param _date: The _date of this Notification.  # noqa: E501
        :type _date: datetime
        :param status: The status of this Notification.  # noqa: E501
        :type status: str
        """
        self.swagger_types = {
            'id': int,
            'title': str,
            'message': str,
            '_date': datetime,
            'status': str
        }

        self.attribute_map = {
            'id': 'id',
            'title': 'title',
            'message': 'message',
            '_date': 'date',
            'status': 'status'
        }
        self._id = id
        self._title = title
        self._message = message
        self.__date = _date
        self._status = status

    @classmethod
    def from_dict(cls, dikt) -> 'Notification':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Notification of this Notification.  # noqa: E501
        :rtype: Notification
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this Notification.

        Unique identifier for the notification.  # noqa: E501

        :return: The id of this Notification.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this Notification.

        Unique identifier for the notification.  # noqa: E501

        :param id: The id of this Notification.
        :type id: int
        """

        self._id = id

    @property
    def title(self) -> str:
        """Gets the title of this Notification.

        Title or header of the notification.  # noqa: E501

        :return: The title of this Notification.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title: str):
        """Sets the title of this Notification.

        Title or header of the notification.  # noqa: E501

        :param title: The title of this Notification.
        :type title: str
        """

        self._title = title

    @property
    def message(self) -> str:
        """Gets the message of this Notification.

        Detailed message or content of the notification.  # noqa: E501

        :return: The message of this Notification.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message: str):
        """Sets the message of this Notification.

        Detailed message or content of the notification.  # noqa: E501

        :param message: The message of this Notification.
        :type message: str
        """

        self._message = message

    @property
    def _date(self) -> datetime:
        """Gets the _date of this Notification.

        Date and time when the notification was created.  # noqa: E501

        :return: The _date of this Notification.
        :rtype: datetime
        """
        return self.__date

    @_date.setter
    def _date(self, _date: datetime):
        """Sets the _date of this Notification.

        Date and time when the notification was created.  # noqa: E501

        :param _date: The _date of this Notification.
        :type _date: datetime
        """

        self.__date = _date

    @property
    def status(self) -> str:
        """Gets the status of this Notification.

        Current status of the notification.  # noqa: E501

        :return: The status of this Notification.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status: str):
        """Sets the status of this Notification.

        Current status of the notification.  # noqa: E501

        :param status: The status of this Notification.
        :type status: str
        """
        allowed_values = ["unread", "read"]  # noqa: E501
        if status not in allowed_values:
            raise ValueError(
                "Invalid value for `status` ({0}), must be one of {1}"
                .format(status, allowed_values)
            )

        self._status = status
