# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class PlatformSettingsUpdateShippingConfigRates(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, region: str=None, price: float=None):  # noqa: E501
        """PlatformSettingsUpdateShippingConfigRates - a model defined in Swagger

        :param region: The region of this PlatformSettingsUpdateShippingConfigRates.  # noqa: E501
        :type region: str
        :param price: The price of this PlatformSettingsUpdateShippingConfigRates.  # noqa: E501
        :type price: float
        """
        self.swagger_types = {
            'region': str,
            'price': float
        }

        self.attribute_map = {
            'region': 'region',
            'price': 'price'
        }
        self._region = region
        self._price = price

    @classmethod
    def from_dict(cls, dikt) -> 'PlatformSettingsUpdateShippingConfigRates':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PlatformSettingsUpdate_shippingConfig_rates of this PlatformSettingsUpdateShippingConfigRates.  # noqa: E501
        :rtype: PlatformSettingsUpdateShippingConfigRates
        """
        return util.deserialize_model(dikt, cls)

    @property
    def region(self) -> str:
        """Gets the region of this PlatformSettingsUpdateShippingConfigRates.

        Shipping region or zone.  # noqa: E501

        :return: The region of this PlatformSettingsUpdateShippingConfigRates.
        :rtype: str
        """
        return self._region

    @region.setter
    def region(self, region: str):
        """Sets the region of this PlatformSettingsUpdateShippingConfigRates.

        Shipping region or zone.  # noqa: E501

        :param region: The region of this PlatformSettingsUpdateShippingConfigRates.
        :type region: str
        """

        self._region = region

    @property
    def price(self) -> float:
        """Gets the price of this PlatformSettingsUpdateShippingConfigRates.

        Shipping rate for the specified region.  # noqa: E501

        :return: The price of this PlatformSettingsUpdateShippingConfigRates.
        :rtype: float
        """
        return self._price

    @price.setter
    def price(self, price: float):
        """Sets the price of this PlatformSettingsUpdateShippingConfigRates.

        Shipping rate for the specified region.  # noqa: E501

        :param price: The price of this PlatformSettingsUpdateShippingConfigRates.
        :type price: float
        """

        self._price = price
