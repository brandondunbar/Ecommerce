# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class OrderItem(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, product_id: int=None, product_name: str=None, quantity: int=None, unit_price: float=None, total: float=None):  # noqa: E501
        """OrderItem - a model defined in Swagger

        :param product_id: The product_id of this OrderItem.  # noqa: E501
        :type product_id: int
        :param product_name: The product_name of this OrderItem.  # noqa: E501
        :type product_name: str
        :param quantity: The quantity of this OrderItem.  # noqa: E501
        :type quantity: int
        :param unit_price: The unit_price of this OrderItem.  # noqa: E501
        :type unit_price: float
        :param total: The total of this OrderItem.  # noqa: E501
        :type total: float
        """
        self.swagger_types = {
            'product_id': int,
            'product_name': str,
            'quantity': int,
            'unit_price': float,
            'total': float
        }

        self.attribute_map = {
            'product_id': 'productId',
            'product_name': 'productName',
            'quantity': 'quantity',
            'unit_price': 'unitPrice',
            'total': 'total'
        }
        self._product_id = product_id
        self._product_name = product_name
        self._quantity = quantity
        self._unit_price = unit_price
        self._total = total

    @classmethod
    def from_dict(cls, dikt) -> 'OrderItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The OrderItem of this OrderItem.  # noqa: E501
        :rtype: OrderItem
        """
        return util.deserialize_model(dikt, cls)

    @property
    def product_id(self) -> int:
        """Gets the product_id of this OrderItem.

        Unique identifier for the product.  # noqa: E501

        :return: The product_id of this OrderItem.
        :rtype: int
        """
        return self._product_id

    @product_id.setter
    def product_id(self, product_id: int):
        """Sets the product_id of this OrderItem.

        Unique identifier for the product.  # noqa: E501

        :param product_id: The product_id of this OrderItem.
        :type product_id: int
        """

        self._product_id = product_id

    @property
    def product_name(self) -> str:
        """Gets the product_name of this OrderItem.

        Name of the product.  # noqa: E501

        :return: The product_name of this OrderItem.
        :rtype: str
        """
        return self._product_name

    @product_name.setter
    def product_name(self, product_name: str):
        """Sets the product_name of this OrderItem.

        Name of the product.  # noqa: E501

        :param product_name: The product_name of this OrderItem.
        :type product_name: str
        """

        self._product_name = product_name

    @property
    def quantity(self) -> int:
        """Gets the quantity of this OrderItem.

        Quantity of the product ordered.  # noqa: E501

        :return: The quantity of this OrderItem.
        :rtype: int
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity: int):
        """Sets the quantity of this OrderItem.

        Quantity of the product ordered.  # noqa: E501

        :param quantity: The quantity of this OrderItem.
        :type quantity: int
        """

        self._quantity = quantity

    @property
    def unit_price(self) -> float:
        """Gets the unit_price of this OrderItem.

        Price of the product per unit.  # noqa: E501

        :return: The unit_price of this OrderItem.
        :rtype: float
        """
        return self._unit_price

    @unit_price.setter
    def unit_price(self, unit_price: float):
        """Sets the unit_price of this OrderItem.

        Price of the product per unit.  # noqa: E501

        :param unit_price: The unit_price of this OrderItem.
        :type unit_price: float
        """

        self._unit_price = unit_price

    @property
    def total(self) -> float:
        """Gets the total of this OrderItem.

        Total price for this item (unitPrice * quantity).  # noqa: E501

        :return: The total of this OrderItem.
        :rtype: float
        """
        return self._total

    @total.setter
    def total(self, total: float):
        """Sets the total of this OrderItem.

        Total price for this item (unitPrice * quantity).  # noqa: E501

        :param total: The total of this OrderItem.
        :type total: float
        """

        self._total = total
